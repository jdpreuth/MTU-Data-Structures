package cs2321;

import java.util.Comparator;

import net.datastructures.Entry;
import net.datastructures.Position;
import net.datastructures.SortedMap;

public class AVL<K, V> extends BinarySearchTree<K, V> implements SortedMap<K, V> {

	public AVL() {
		// TODO Auto-generated constructor stub
		super();
	}

	public AVL(Comparator<K> c) {
		// TODO Auto-generated constructor stub
		super(c);
	}

	private int max(int a, int b) {
		if (a > b) {
			return a;
		} else {
			return b;
		}
	}

	public int height(Position<Entry<K, V>> v) {
		// TODO return the height of subtree v
		Node node = castToNode(v);
		if (node.isSentinel()) {
			return 0;
		}
		return max(height(node.left()), height(node.right()));
	}

	@Override
	public V put(K key, V value) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public V remove(K key) {
		// TODO Auto-generated method stub
		return null;
	}

}
